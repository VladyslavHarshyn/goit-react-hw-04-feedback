{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-04-feedback/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport FeedbackBtn from './components/Feedback/FeedbackBtn/FeedbackBtn';\nimport FeedbackStats from './components/Feedback/FeedbackStats/FeedbackStats';\nimport Section from 'components/Feedback/Section/Section';\nimport Notification from 'components/Feedback/Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n\n  const onLeaveFeedback = propertyName => {\n    setState(prevState => {\n      return { ...prevState,\n        [propertyName]: prevState[propertyName] + 1\n      };\n    });\n  };\n\n  const {\n    good,\n    neutral,\n    bad\n  } = state;\n  const countTotalFeedback = good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = propertyName => {\n    if (!countTotalFeedback) {\n      return 0;\n    }\n\n    const overall = countTotalFeedback; // const result = (overall / countTotalFeedback) * 100;\n\n    return Math.round(good / overall * 100);\n  };\n\n  const positivePercent = countPositiveFeedbackPercentage('good');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: /*#__PURE__*/_jsxDEV(FeedbackBtn, {\n        options: Object.keys(state),\n        onLeaveFeedback: onLeaveFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Statistics\",\n      children: countTotalFeedback > 0 ? /*#__PURE__*/_jsxDEV(FeedbackStats, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: countTotalFeedback,\n        positivePercentage: positivePercent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n        title: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"sGEG3JIwuPBnMZ87ID18WLpvnTA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-04-feedback/src/App.jsx"],"names":["useState","FeedbackBtn","FeedbackStats","Section","Notification","App","state","setState","good","neutral","bad","onLeaveFeedback","propertyName","prevState","countTotalFeedback","countPositiveFeedbackPercentage","overall","Math","round","positivePercent","Object","keys"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,aAAP,MAA0B,mDAA1B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE,CAD2B;AAEjCC,IAAAA,OAAO,EAAE,CAFwB;AAGjCC,IAAAA,GAAG,EAAE;AAH4B,GAAD,CAAlC;;AAMA,QAAMC,eAAe,GAAGC,YAAY,IAAI;AACtCL,IAAAA,QAAQ,CAACM,SAAS,IAAI;AACpB,aAAO,EACL,GAAGA,SADE;AAEL,SAACD,YAAD,GAAgBC,SAAS,CAACD,YAAD,CAAT,GAA0B;AAFrC,OAAP;AAID,KALO,CAAR;AAMD,GAPD;;AASA,QAAM;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAAyBJ,KAA/B;AACA,QAAMQ,kBAAkB,GAAGN,IAAI,GAAGC,OAAP,GAAiBC,GAA5C;;AAEA,QAAMK,+BAA+B,GAAGH,YAAY,IAAI;AACtD,QAAI,CAACE,kBAAL,EAAyB;AACvB,aAAO,CAAP;AACD;;AACD,UAAME,OAAO,GAAGF,kBAAhB,CAJsD,CAKtD;;AACA,WAAOG,IAAI,CAACC,KAAL,CAAYV,IAAI,GAAGQ,OAAR,GAAmB,GAA9B,CAAP;AACD,GAPD;;AAQA,QAAMG,eAAe,GAAGJ,+BAA+B,CAAC,MAAD,CAAvD;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,OAAO,EAAEK,MAAM,CAACC,IAAP,CAAYf,KAAZ,CADX;AAEE,QAAA,eAAe,EAAEK;AAFnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,YAAf;AAAA,gBACGG,kBAAkB,GAAG,CAArB,gBACC,QAAC,aAAD;AACE,QAAA,IAAI,EAAEN,IADR;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,GAAG,EAAEC,GAHP;AAIE,QAAA,KAAK,EAAEI,kBAJT;AAKE,QAAA,kBAAkB,EAAEK;AALtB;AAAA;AAAA;AAAA;AAAA,cADD,gBASC,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CArDM;;GAAMd,G;;KAAAA,G;AAuDb,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport FeedbackBtn from './components/Feedback/FeedbackBtn/FeedbackBtn';\nimport FeedbackStats from './components/Feedback/FeedbackStats/FeedbackStats';\nimport Section from 'components/Feedback/Section/Section';\nimport Notification from 'components/Feedback/Notification/Notification';\n\nexport const App = () => {\n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const onLeaveFeedback = propertyName => {\n    setState(prevState => {\n      return {\n        ...prevState,\n        [propertyName]: prevState[propertyName] + 1,\n      };\n    });\n  };\n\n  const { good, neutral, bad } = state;\n  const countTotalFeedback = good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = propertyName => {\n    if (!countTotalFeedback) {\n      return 0;\n    }\n    const overall = countTotalFeedback;\n    // const result = (overall / countTotalFeedback) * 100;\n    return Math.round((good / overall) * 100);\n  };\n  const positivePercent = countPositiveFeedbackPercentage('good');\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackBtn\n          options={Object.keys(state)}\n          onLeaveFeedback={onLeaveFeedback}\n        ></FeedbackBtn>\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback > 0 ? (\n          <FeedbackStats\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={positivePercent}\n          ></FeedbackStats>\n        ) : (\n          <Notification title=\"There is no feedback\"></Notification>\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}