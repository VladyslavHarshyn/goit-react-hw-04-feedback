{"ast":null,"code":"import { Component } from \"react\";\nimport FeedbackBtn from \"./components/Feedback/FeedbackBtn/FeedbackBtn\";\nimport FeedbackStats from \"./components/Feedback/FeedbackStats/FeedbackStats\";\nimport Section from \"components/Section/Section\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.setVote = vote => {\n      this.setState(prevState => {\n        return {\n          [vote]: prevState[vote] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + neutral + bad;\n    };\n  }\n\n  countPositiveFeedbackPercentage() {\n    const {\n      good\n    } = this.state;\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-02-feedback/src/App.jsx"],"names":["Component","FeedbackBtn","FeedbackStats","Section","App","state","good","neutral","bad","setVote","vote","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","render","total"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,aAAP,MAA0B,mDAA1B;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBK,KAFwB,GAEhB;AACRC,MAAAA,IAAI,EAAE,CADE;AAERC,MAAAA,OAAO,EAAE,CAFD;AAGRC,MAAAA,GAAG,EAAE;AAHG,KAFgB;;AAAA,SAS1BC,OAT0B,GAShBC,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,eAAO;AACH,WAACF,IAAD,GAAQE,SAAS,CAACF,IAAD,CAAT,GAAkB;AADvB,SAAP;AAGH,OAJD;AAKL,KAfyB;;AAAA,SAiBvBG,kBAjBuB,GAiBF,MAAM;AACxB,YAAM;AAAEP,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,aAAOC,IAAI,GAAGC,OAAP,GAAiBC,GAAxB;AACH,KApBuB;AAAA;;AAsBxBM,EAAAA,+BAA+B,GAAG;AAC9B,UAAM;AAAER,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AAEH;;AAEDU,EAAAA,MAAM,GAAG;AAET,UAAM;AAAET,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMW,KAAK,GAAG,KAAKH,kBAAL,EAAd;AAED,wBACS,qCADT;AAMA;;AAtCyB;;AA0C5B,eAAeT,GAAf","sourcesContent":["import { Component } from \"react\";\nimport FeedbackBtn from \"./components/Feedback/FeedbackBtn/FeedbackBtn\";\nimport FeedbackStats from \"./components/Feedback/FeedbackStats/FeedbackStats\";\nimport Section from \"components/Section/Section\";\n\nclass App extends Component {\n\n    state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n    }\n  \n   \n  setVote = vote => {\n        this.setState(prevState => {\n            return {\n                [vote]: prevState[vote] + 1\n            }\n        })\n  }\n    \n     countTotalFeedback = () => {\n        const { good, neutral, bad } = this.state;\n        return good + neutral + bad;\n    }\n  \n    countPositiveFeedbackPercentage() {\n        const { good } = this.state;\n\n    }\n  \n    render() {\n      \n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n\n   return (\n            <>\n                {/* <VoteActions setVote={this.setVote} />\n                <VoteStats democrates={democrates} republic={republic} total={total} /> */}\n            </>\n        )\n  }\n  \n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}