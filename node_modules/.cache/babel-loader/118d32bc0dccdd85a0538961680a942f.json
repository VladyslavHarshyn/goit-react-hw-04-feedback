{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-02-feedback/src/App.jsx\";\nimport { Component } from \"react\";\nimport FeedbackBtn from \"./FeedbackBtn\";\nimport FeedbackStats from \"./FeedbackStats\";\nimport Section from \"components/Section\";\nimport Notification from \"components/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.setVote = vote => {\n      this.setState(prevState => {\n        return {\n          [vote]: prevState[vote] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + neutral + bad;\n    };\n  }\n\n  countPositiveFeedbackPercentage() {\n    const {\n      good\n    } = this.state;\n    const total = this.countTotalFeedback();\n\n    if (total === 0) {\n      return 0;\n    } else {\n      return Math.round(good / total * 100);\n    }\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackBtn, {\n          options: Object.keys(this.state),\n          onLeaveFeedback: this.setVote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: [!Boolean(total) && /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), Boolean(total) && /*#__PURE__*/_jsxDEV(FeedbackStats, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: this.countTotalFeedback(),\n          positivePercentage: this.countPositiveFeedbackPercentage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-02-feedback/src/App.jsx"],"names":["Component","FeedbackBtn","FeedbackStats","Section","Notification","App","state","good","neutral","bad","setVote","vote","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","total","Math","round","render","Object","keys","Boolean"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBM,KAFwB,GAEhB;AACRC,MAAAA,IAAI,EAAE,CADE;AAERC,MAAAA,OAAO,EAAE,CAFD;AAGRC,MAAAA,GAAG,EAAE;AAHG,KAFgB;;AAAA,SAS1BC,OAT0B,GAShBC,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,eAAO;AACH,WAACF,IAAD,GAAQE,SAAS,CAACF,IAAD,CAAT,GAAkB;AADvB,SAAP;AAGH,OAJD;AAKL,KAfyB;;AAAA,SAiBvBG,kBAjBuB,GAiBF,MAAM;AACxB,YAAM;AAAEP,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,aAAOC,IAAI,GAAGC,OAAP,GAAiBC,GAAxB;AACH,KApBuB;AAAA;;AAsBxBM,EAAAA,+BAA+B,GAAG;AAC9B,UAAM;AAAER,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAMU,KAAK,GAAG,KAAKF,kBAAL,EAAd;;AAEJ,QAAIE,KAAK,KAAK,CAAd,EAAiB;AACf,aAAO,CAAP;AACD,KAFD,MAEO;AACL,aAAOC,IAAI,CAACC,KAAL,CAAYX,IAAI,GAAGS,KAAR,GAAiB,GAA5B,CAAP;AACD;AACA;;AAEDG,EAAAA,MAAM,GAAG;AAET,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMU,KAAK,GAAG,KAAKF,kBAAL,EAAd;AAED,wBACS;AAAA,8BACD,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BAEI,QAAC,WAAD;AACL,UAAA,OAAO,EAAEM,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAjB,CADJ;AAEL,UAAA,eAAe,EAAE,KAAKI;AAFjB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADC,eAUN,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,mBACG,CAACY,OAAO,CAACN,KAAD,CAAR,iBAAmB,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADtB,EAEGM,OAAO,CAACN,KAAD,CAAP,iBAAkB,QAAC,aAAD;AACjB,UAAA,IAAI,EAAET,IADW;AAEjB,UAAA,OAAO,EAAEC,OAFQ;AAGjB,UAAA,GAAG,EAAEC,GAHY;AAIjB,UAAA,KAAK,EAAE,KAAKK,kBAAL,EAJU;AAKjB,UAAA,kBAAkB,EAAE,KAAKC,+BAAL;AALH;AAAA;AAAA;AAAA;AAAA,gBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVM;AAAA,oBADT;AAuBA;;AA7DyB;;AAiE5B,eAAeV,GAAf","sourcesContent":["import { Component } from \"react\";\nimport FeedbackBtn from \"./FeedbackBtn\";\nimport FeedbackStats from \"./FeedbackStats\";\nimport Section from \"components/Section\";\nimport Notification from \"components/Notification\";\n\nclass App extends Component {\n\n    state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n    }\n  \n   \n  setVote = vote => {\n        this.setState(prevState => {\n            return {\n                [vote]: prevState[vote] + 1\n            }\n        })\n  }\n    \n     countTotalFeedback = () => {\n        const { good, neutral, bad } = this.state;\n        return good + neutral + bad;\n    }\n  \n    countPositiveFeedbackPercentage() {\n        const { good } = this.state;\n        const total = this.countTotalFeedback();\n\n    if (total === 0) {\n      return 0\n    } else {\n      return Math.round((good / total) * 100);\n    }\n    }\n  \n    render() {\n      \n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n\n   return (\n            <>\n           <Section title=\"Please leave feedback\">\n               \n               <FeedbackBtn\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.setVote}\n               ></FeedbackBtn>\n               \n           </Section>\n           \n      <Section title=\"Statistics\">\n        {!Boolean(total) && <Notification message=\"There is no feedback\"></Notification>}\n        {Boolean(total) && <FeedbackStats\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        ></FeedbackStats>}\n        </Section>\n            </>\n        )\n  }\n  \n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}